// Code generated by protoc-gen-go. DO NOT EDIT.
// source: UserService.proto

package UserService

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UserQueryInfo struct {
	// The location from which the message is sent.
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserQueryInfo) Reset()         { *m = UserQueryInfo{} }
func (m *UserQueryInfo) String() string { return proto.CompactTextString(m) }
func (*UserQueryInfo) ProtoMessage()    {}
func (*UserQueryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7864342a5dd7108, []int{0}
}

func (m *UserQueryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserQueryInfo.Unmarshal(m, b)
}
func (m *UserQueryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserQueryInfo.Marshal(b, m, deterministic)
}
func (m *UserQueryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserQueryInfo.Merge(m, src)
}
func (m *UserQueryInfo) XXX_Size() int {
	return xxx_messageInfo_UserQueryInfo.Size(m)
}
func (m *UserQueryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserQueryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserQueryInfo proto.InternalMessageInfo

func (m *UserQueryInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type UserInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Age                  int32    `protobuf:"varint,2,opt,name=age,proto3" json:"age,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfo) Reset()         { *m = UserInfo{} }
func (m *UserInfo) String() string { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()    {}
func (*UserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7864342a5dd7108, []int{1}
}

func (m *UserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfo.Unmarshal(m, b)
}
func (m *UserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfo.Marshal(b, m, deterministic)
}
func (m *UserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfo.Merge(m, src)
}
func (m *UserInfo) XXX_Size() int {
	return xxx_messageInfo_UserInfo.Size(m)
}
func (m *UserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfo proto.InternalMessageInfo

func (m *UserInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserInfo) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func init() {
	proto.RegisterType((*UserQueryInfo)(nil), "UserQueryInfo")
	proto.RegisterType((*UserInfo)(nil), "UserInfo")
}

func init() { proto.RegisterFile("UserService.proto", fileDescriptor_e7864342a5dd7108) }

var fileDescriptor_e7864342a5dd7108 = []byte{
	// 139 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x0c, 0x2d, 0x4e, 0x2d,
	0x0a, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x92, 0xe7,
	0xe2, 0x05, 0x09, 0x06, 0x96, 0xa6, 0x16, 0x55, 0x7a, 0xe6, 0xa5, 0xe5, 0x0b, 0xf1, 0x71, 0x31,
	0x65, 0xa6, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0xb0, 0x06, 0x31, 0x65, 0xa6, 0x28, 0x19, 0x70, 0x71,
	0x80, 0x14, 0x80, 0xe5, 0x84, 0xb8, 0x58, 0xf2, 0x12, 0x73, 0x53, 0xc1, 0xb2, 0x9c, 0x41, 0x60,
	0xb6, 0x90, 0x00, 0x17, 0x73, 0x62, 0x7a, 0xaa, 0x04, 0x13, 0x58, 0x03, 0x88, 0x69, 0xa4, 0xc7,
	0xc5, 0x02, 0xd2, 0x21, 0xa4, 0xc6, 0xc5, 0xee, 0x9e, 0x5a, 0x02, 0x66, 0xf2, 0xe9, 0xa1, 0x58,
	0x22, 0xc5, 0xa9, 0x07, 0x33, 0x53, 0x89, 0x21, 0x89, 0x0d, 0xec, 0x12, 0x63, 0x40, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xe3, 0x4c, 0xae, 0x8f, 0x9e, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserClient is the client API for User service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserClient interface {
	// A simple RPC.
	//
	// Obtains the feature at a given position.
	//
	// A feature with an empty name is returned if there's no feature at the given
	// position.
	GetUser(ctx context.Context, in *UserQueryInfo, opts ...grpc.CallOption) (*UserInfo, error)
}

type userClient struct {
	cc *grpc.ClientConn
}

func NewUserClient(cc *grpc.ClientConn) UserClient {
	return &userClient{cc}
}

func (c *userClient) GetUser(ctx context.Context, in *UserQueryInfo, opts ...grpc.CallOption) (*UserInfo, error) {
	out := new(UserInfo)
	err := c.cc.Invoke(ctx, "/User/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServer is the server API for User service.
type UserServer interface {
	// A simple RPC.
	//
	// Obtains the feature at a given position.
	//
	// A feature with an empty name is returned if there's no feature at the given
	// position.
	GetUser(context.Context, *UserQueryInfo) (*UserInfo, error)
}

// UnimplementedUserServer can be embedded to have forward compatible implementations.
type UnimplementedUserServer struct {
}

func (*UnimplementedUserServer) GetUser(ctx context.Context, req *UserQueryInfo) (*UserInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}

func RegisterUserServer(s *grpc.Server, srv UserServer) {
	s.RegisterService(&_User_serviceDesc, srv)
}

func _User_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserQueryInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/User/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).GetUser(ctx, req.(*UserQueryInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _User_serviceDesc = grpc.ServiceDesc{
	ServiceName: "User",
	HandlerType: (*UserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUser",
			Handler:    _User_GetUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "UserService.proto",
}
